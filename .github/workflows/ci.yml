name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    name: Build & Test Backend (.NET)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore src/UniverseBuilder.sln
    
    - name: Build
      run: dotnet build src/UniverseBuilder.sln --no-restore --configuration Release
    
    - name: Run unit tests
      run: dotnet test src/UniverseBuilder.sln --no-build --verbosity normal --configuration Release --logger "console;verbosity=normal"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/coverage.xml
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  build-and-test-frontend:
    runs-on: ubuntu-latest
    name: Build & Test Frontend (React)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: src/universe-builder-ui/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: src/universe-builder-ui
    
    - name: Build
      run: npm run build
      working-directory: src/universe-builder-ui
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      working-directory: src/universe-builder-ui
      continue-on-error: true
    
    - name: Lint
      run: npm run lint
      working-directory: src/universe-builder-ui
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Checks
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore src/UniverseBuilder.sln
    
    - name: Check formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic src/UniverseBuilder.sln
      continue-on-error: true

  test-summary:
    runs-on: ubuntu-latest
    name: Test Summary
    needs: [build-and-test-backend, build-and-test-frontend]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.build-and-test-backend.result }}" = "failure" ] || [ "${{ needs.build-and-test-frontend.result }}" = "failure" ]; then
          echo "❌ One or more test jobs failed"
          exit 1
        fi
        echo "✅ All tests passed"
      shell: bash
